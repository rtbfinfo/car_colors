{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-media-queries/components/MediaQuery.types.js","../../node_modules/svelte-media-queries/utils/MQLEvent.js","../../node_modules/svelte/transition/index.mjs","../../src/Navbar.svelte","../../src/Hero_2.svelte","../../src/Intro.svelte","../../src/Scrolly.svelte","../../src/Scroll_graph_image.svelte","../../src/Part_1.svelte","../../node_modules/svelte-use-io/create_pointer.js","../../node_modules/svelte-use-io/observer.js","../../src/Video.svelte","../../src/Grid_1.svelte","../../src/Part_2.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nexport var Types;\n(function (Types) {\n    Types[\"string\"] = \"string\";\n    Types[\"array\"] = \"array\";\n    Types[\"object\"] = \"object\";\n})(Types || (Types = {}));\n","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Types } from \"../components/MediaQuery.types\";\nimport { getType } from \"./getType\";\nexport var MQLEventMethods;\n(function (MQLEventMethods) {\n    MQLEventMethods[\"add\"] = \"addEventListener\";\n    MQLEventMethods[\"remove\"] = \"removeEventListener\";\n})(MQLEventMethods || (MQLEventMethods = {}));\nexport class MQLEvent {\n    static inline(item, handler = () => { }, method = MQLEventMethods.add) {\n        (item && item[method]) && item[method]('change', handler);\n    }\n    static array(arr, handler = () => { }, method = MQLEventMethods.add) {\n        //@ts-ignore\n        arr.flat(Infinity).forEach(item => autoMQLEvent(item, handler, method));\n    }\n    static object(obj, handler = () => { }, method = MQLEventMethods.add) {\n        for (const key in obj) {\n            autoMQLEvent(obj[key], handler, method);\n        }\n    }\n}\nexport function autoMQLEvent(mql, handler = () => { }, method = MQLEventMethods.add) {\n    const type = getType(mql);\n    if (mql instanceof MediaQueryList)\n        return MQLEvent.inline(mql, handler, method);\n    //@ts-ignore\n    if (type === Types.array)\n        return MQLEvent.array(mql, handler, method);\n    //@ts-ignore\n    if (type === Types.object)\n        return MQLEvent.object(mql, handler, method);\n}\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n\n  import { fade } from \"svelte/transition\";\n  \n  let y\n  \n  </script>\n\n<svelte:window bind:scrollY={y} />\n\n{#if y > 50}\n\n<div id=\"progress-bar\"></div>\n<nav class=\"fixed-nav-bar\" in:fade>\n\n      <a class=\"brand\" href=\"https://www.rtbf.be/info?\" rel=\"noreferrer\" target=\"_blank\">\n        <img src=\"./rtbf.svg\" alt=\"RTBF Logo\" />\n      </a>\n      \n      <div class=\"share\">\n      <!-- svelte-ignore a11y-missing-content -->\n      <a href=\"https://www.facebook.com/sharer/sharer.php?u=https://www.rtbf.be/article/11267155\" rel=\"noreferrer\" target=\"_blank\" alt=\"Facebook Logo\"><img src=\"https://rtbfmedia.be/rtbfinfo/spotify_sound/pics/facebook_blanc_50_50.svg\" alt=\"facebook Logo\" class=\"svelte-11zqixe\"></a>      <!-- svelte-ignore a11y-missing-content -->\n      <a href=\"https://twitter.com/intent/tweet?text=https://www.rtbf.be/article/11267155\" rel=\"noreferrer\" target=\"_blank\" alt=\"Twitter Logo\"><img src=\"https://rtbfmedia.be/rtbfinfo/spotify_sound/pics/X_blanc_50_50.svg\" alt=\"twitter(X) Logo\" class=\"svelte-11zqixe\"></a>      </div>\n\n    </nav>\n\n    {/if}\n\n    \n\n    <style>\n.fixed-nav-bar {\n    position: fixed;\n    align-items: flex-end;\n    justify-content: flex-end;\n    top: 0;\n    left: 0;\n    z-index: 9998;\n    width: 100%;\n    height: 40px;\n    background-color: #2e2e2e;\n    box-shadow: 0 0 10px gray;\n    opacity: .7;\n    display: flex;\n    line-height: 50px;\n  }\n  \n  nav img {\n    height: 30px;\n    transform: translateY(15%);\n  }\n  \n  nav .brand {\n    flex: 1;\n    align-self: flex-start;\n    height: 40px;\n    margin-left: 20px;\n  }\n\n\n.share{\n    flex: -1;\n    align-self: flex-end;\n    height: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    transform: translateY(-30%);\n  }\n\n  /* Progress bar */\n#progress-bar {\n    --scrollAmount: 0%;\n    background-color: #0057A2;\n    width: var(--scrollAmount);\n  \n    /*  background: linear-gradient(to right, #F24E1E var(--scrollAmount), transparent 0);\n    width: 100%; */\n    \n    height: 5px;\n    position: fixed;\n    top: 0;\n    z-index:10000;\n    margin-top: 35px;\n  }\n\n    </style>","<div class=\"wrapper\">\n  <div class=\"container\">\n    <p><a href='https://www.rtbf.be/archive/decrypte' target='_blank' style=\"color:white !important;font-weight:700;text-decoration:none;\" rel=noreferrer>Décrypte</a></p>\n    <p>En 50 ans</p>\n    <h2><big>COMMENT</big> et <big>POURQUOI</big><br>nos voitures ont perdu</h2>\n    <h1>des couleurs</h1>\n\n\n    <p style=\"text-align: center\">🚗 🚕 🚗 🚕 🚗 🚕 🚗</p>\n\n    <p>Par Ambroise Carton</p>\n\n    <p style=\"text-align: center\">🚗 🚕 🚗 🚕 🚗 🚕 🚗</p>\n\n  </div>\n\n  <div class=\"mouse_wheel\">\n    <div class=\"anim-scroll\">\n    <div class=\"anim-scroll--wheel\"></div>\n  </div>\n</div>\n</div>\n\n<style>\n\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n\n:root {\n  --color-1: #186cb8;\n  --color-2: #2a9a9f;\n  --color-3: #f1b211;\n  --color-4: #e83611;\n  --color-5: #f9002f;\n}\n\n\n.wrapper {\n  background: #2E2E2E;\n  line-height: 1;\n  min-height: 100%;\n  display: grid;\n  place-items: center;\n  height: 100vh;\n}\n\nh1 {\n  font-family: \"Exo\", sans-serif;\n  font-size: 15vw;\n  font-weight: 900;\n  margin: auto;\n  text-transform: uppercase;\n  background: linear-gradient(219deg, \n    var(--color-1) 19%, \n    transparent 19%,transparent 20%, \n    var(--color-2) 20%, var(--color-2)  39%,\n    transparent 39%,transparent 40%, \n    var(--color-3) 40%,var(--color-3) 59% ,\n    transparent 59%,transparent 60%, \n    var(--color-4) 60%, var(--color-4) 79%,\n    transparent 79%, transparent 80%, \n    var(--color-5) 80%);\n  background-clip: text;\n  -webkit-background-clip: text;\n  color: transparent;\n}\n\nh2{\n  font-size: 2vw;\n  color: white;\n  margin: 0 auto;\n  text-align: center;\n}\n\np{\n  color: white;\n}\n\np, h2 {\n    margin: 20px 0; /* Adjust this value as needed */\n}\n\n.container {\n  margin-left: auto;\n    margin-right: auto;\n    overflow: hidden !important;\n  text-align: center;\n  background: radial-gradient(circle at 1.4% 1.4% ,var(--color-1) .8%,transparent  .8% ), \n    radial-gradient(circle at 5.5% 3%,var(--color-2) .45% ,transparent .45% ), \n    radial-gradient(circle at 2.5% 3.5%,var(--color-3) .5% ,transparent .5% ), \n    radial-gradient(circle at 4.5% 1.2%,var(--color-4) .25%,transparent .25% ),\n\n}\n\n\n.mouse_wheel {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  z-index: 1;\n  position: absolute;\n    bottom: 7%;\n    left: 50%; \n  transform: translateX(-50%); \n}\n.anim-scroll {\n  border: 2px solid #fff;\n  border-radius: 22px;\n  height: 40px;\n  position: relative;\n  width: 20px;\n  z-index: 1;\n}\n.anim-scroll--wheel {\n  animation: scroll 2.5s ease infinite;\n  background: #fff;\n  border-radius: 30px;\n  height: 8px;\n  left: calc(50% - 1.5px);\n  position: absolute;\n  right: 50%;\n  top: 8px;\n  width: 3px;\n}\n@keyframes scroll {\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(16px);\n  }\n  51% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(0);\n  }\n}\n\n\n@media screen and (min-width: 768px) {\n  h1 {\n    font-size: 6.5rem;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  h2 {\n    font-size: 20px;\n\n  }\n}\n\n\n</style>","<div class=\"intro\">\n  <p>\n    <span class=\"firstcharacter\">V</span>\n    <p><strong>oiture jaune ! » Peut-être avez-vous déjà joué à ce jeu étant enfant lors de longs trajets en voiture</strong> : le premier qui aperçoit une voiture jaune canari, poussin ou citron – peu importe pourvu que ça soit jaune – gagne un point. Mais, avec les années, ce jeu devient de plus en plus complexe. Quand on se promène dans les rues, on a presque l’impression que les conducteurs ont laissé tomber les couleurs voyantes. Les carrosseries vert pomme ou orange des années 70 ont laissé la place à des voitures grises, noires ou blanches. Dans le meilleur des cas, un rouge ou un bleu semble s’être glissé entre deux bandes de circulation.  \n\n<p>Alors, simple impression ou vérité ? Cette perte de couleurs du parc automobile belge a-t-elle une raison ? La rédaction de Décrypte a enquêté et vous propose des chiffres inédits ainsi que des explications techniques. <strong><big>Bienvenue dans la palette de couleurs automobile de 2023</big>.</strong></p>\n</div>\n\n<style>\n  .intro {\n    padding: 1em;\n    min-width: 17.5em;\n    max-width: 70ch;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: 1rem;\n    line-height: 150%;\n  }\n\n  .firstcharacter {\n    float: left;\n    font-size: 95px;\n    line-height: 60px;\n    padding-right: 8px;\n    font-weight: 700;\n  }\n</style>\n","<script>\n  /**\n\tScrollytelling component from Russell Goldenberg \n\thttps://twitter.com/codenberg/status/1432774653139984387\n\t\n   * This component manages which item is most in view for scroll triggering\n   * example:\n   * <Scroll\n   * \tbind:value={scrollIndex}\n   * >\n   * **items here**\n   * </Scroll>\n   *\n   * optional params with defaults\n   * <Scroll root={null} top={0} bottom={0} increments={100}>\n   */\n  import { onMount } from \"svelte\";\n  export let root = null;\n  export let top = 0;\n  export let bottom = 0;\n  export let increments = 100;\n  export let value = undefined;\n\n  const steps = [];\n  const threshold = [];\n\n  let nodes = [];\n  let intersectionObservers = [];\n  let container;\n\n  $: top, bottom, update();\n\n  const update = () => {\n    if (!nodes.length) return;\n    nodes.forEach(createObserver);\n  };\n\n  const mostInView = () => {\n    let maxRatio = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < steps.length; i++) {\n      if (steps[i] > maxRatio) {\n        maxRatio = steps[i];\n        maxIndex = i;\n      }\n    }\n\n    if (maxRatio > 0) value = maxIndex;\n\t\telse value = undefined;\n  };\n\n  const createObserver = (node, index) => {\n    const handleIntersect = (e) => {\n      const intersecting = e[0].isIntersecting;\n      const ratio = e[0].intersectionRatio;\n      steps[index] = ratio;\n      mostInView();\n    };\n\n    const marginTop = top ? top * -1 : 0;\n    const marginBottom = bottom ? bottom * -1 : 0;\n    const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n    const options = { root, rootMargin, threshold };\n\n    if (intersectionObservers[index]) intersectionObservers[index].disconnect();\n\n    const io = new IntersectionObserver(handleIntersect, options);\n    io.observe(node);\n    intersectionObservers[index] = io;\n  };\n\n  onMount(() => {\n    for (let i = 0; i < increments + 1; i++) {\n      threshold.push(i / increments);\n    }\n    nodes = container.querySelectorAll(\":scope > *\");\n    update();\n  });\n</script>\n\n<div bind:this={container}>\n  <slot />\n</div>\n","<script>\n\timport Scroll from \"./Scrolly.svelte\";\n\n\n  \n    let currentStep;\n    let slide = \"0\";\n    let contentLink;\n\tlet iframeHeight=\"90vh\";\n\n  \n\tconst steps = [\n\t\t{ text:\"<p>Nous avons photographié les voitures depuis les hauteurs de la E411 un lundi d’automne. Une photo par seconde pendant quarante minutes, soit le temps nécessaire pour voir passer 1000 voitures. <strong>Scrollez vers le bas pour voir le résultat<strong>.</p>\", stepNumber: 1 },\n\t\t{ text:\"<p>À l’aide d’un script informatique, nous avons automatiquement isolé les véhicules sur chaque photo.</p>\", stepNumber: 2 },\n\t\t{ text:\"<p>Puis nous avons extrait la couleur de chaque carrosserie. Voici un petit échantillon. Coucou la voiture jaune&nbsp;!</p>\", stepNumber: 3 },\n\t\t{ text:\"<p>Pour enfin réaliser cette mosaïque qui reprend la couleur dominante pour 1000 carrosseries.</p>\", stepNumber: 4 },\n\t\t{ text:\"<p>Mettons un peu d'ordre dans tout ça, du plus clair au plus foncé... Un constat s'impose : les couleurs dites «&nbsp;originales&nbsp;» sont clairement minoritaires dans notre jeu de données.</p>\", stepNumber: 5 },\n\t\t{ text:\"<p>En quarante minutes, une seule voiture <mark style='background-color: #f5cd6e; padding: 0 5px 0 5px; border-radius: 5px;'><strong>jaune</strong></mark> s'est donc présentée. À part les <mark style='background-color: #de0427; color:white; padding: 0 5px 0 5px; border-radius: 5px;'><strong>rouges</strong></mark> et les <mark style='background-color: #91b0de; padding: 0 5px 0 5px; border-radius: 5px;'><strong>bleues</strong></mark>, seule un <mark style='background-color: #9cb888; padding: 0 5px 0 5px; border-radius: 5px;'><strong>vert olive</strong></mark> et un <mark style='background-color: #6Dcdff; padding: 0 5px 0 5px; border-radius: 5px;'><strong>bleu ciel</strong></mark> sortent du lot. Notez que ce qui peut apparaître comme du bleu ciel est sans doute du gris, c'est dû aux reflets du soleil sur la carrosserie.</p>\", stepNumber: 6 },\n\t\t{ text:\"<p>Cela ne fait que confirmer une tendance mise en évidence par Axalta, l'un des principaux producteurs mondiaux de peintures pour voitures qui observe les couleurs tendance en Europe depuis les années 80. Il y a 40 ans, le <mark style='background-color: #de0427; color:white; padding: 0 5px 0 5px; border-radius: 5px;'><strong>rouge</strong></mark>, le <mark style='background-color: #06a082; padding: 0 5px 0 5px; border-radius: 5px;'><strong>vert</strong></mark> et même le <mark style='background-color: #f5cd6e; padding: 0 5px 0 5px; border-radius: 5px;'><strong>jaune</strong></mark> trouvaient encore leur place dans le top 5.</p>\", stepNumber: 7 },\n\t\t{ text:\"<p>Bon dernier au milieu des années 90, le <mark style='background-color: #D1D3D4; color:white; padding: 0 5px 0 5px; border-radius: 5px;'><strong>gris</strong></mark> prend la tête au début des années 2000.</p>\", stepNumber: 8 },\n\t\t{ text:\"<p>À l’aube des années 2010, la tendance est installée : cinquante nuances de <mark style='background-color: #D1D3D4; color:white; padding: 0 5px 0 5px; border-radius: 5px;'><strong>gris</strong></mark> avec quelques touches de <mark style='background-color: black; color:white; padding: 0 5px 0 5px; border-radius: 5px;'><strong>noir</strong></mark> et de <mark style='background-color: #0082DC; color:white; padding: 0 5px 0 5px; border-radius: 5px;'><strong>bleu</strong></mark> ici et là.</p>\", stepNumber: 9 },\n];\n  \n    $: {\n        if (currentStep === 0) {\n            slide = \"video\";\n            contentLink = \"./vids/timelapse_desktop.mp4\";\n        } else if (currentStep === 1) {\n            slide = \"image\";\n            contentLink = \"./pics/all_cars_desktop.webp\";\n        } else if (currentStep === 2) {\n            slide = \"image\";\n            contentLink = \"./pics/car_example.webp\"\n        } else if (currentStep >= 3 && currentStep <= 5) {\n        slide = \"flourish\";\n        contentLink = `https://flo.uri.sh/story/2049120/embed#slide-${currentStep - 3}`;\n\t\tiframeHeight = \"100vh\";\n    }\n\telse if (currentStep >= 6 && currentStep <= 8) {\n        slide = \"flourish\";\n        contentLink = `https://flo.uri.sh/story/2049127/embed#slide-${currentStep - 6}`;\n\t\tiframeHeight = \"70vh\";\n    }\n    }\n  \n  </script>\n\n<div class=\"section-container\">\n\n\t<div class=\"steps-container\">\n\n\t\t<Scroll bind:value={currentStep}>\n\t\t\t{#each steps as step, i}\n\t\t\t\t<div class=\"step\" class:active={currentStep === i}>\n\t\t\t\t\t<div class=\"step-content\">\n\t\t\t\t\t\t{@html step.text} <span style=\"text-align: right; color: grey;font-weight: 900;font-size: 0.8em\">{step.stepNumber}/9</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t\t<div class=\"spacer\"/>\n\t\t</Scroll>\n\t\t\n\t\t  \n    </div>\n\n\t<div class=\"sticky\">\n        {#if slide === \"video\"}\n            <video key=\"video\" class='picture' autoplay muted loop playsinline preload=“metadata”>\n                <source src={contentLink} type=\"video/mp4\">\n            </video>\n\t\t\t\n        {:else if slide === \"image\"}\n            <img key=\"image-{currentStep}\" class='picture' src={contentLink} alt=\"\" />\n\n\t\t{:else if slide === \"flourish\"}\n        <iframe key=\"iframe-{currentStep}\" src={contentLink} title='Interactive or visual content' class='flourish-embed' frameborder='0' scrolling='no' style='width:100%;height:{iframeHeight};'></iframe>\n    {/if}\n    </div>\n</div>\n\t\n  \n\n  \n  \n  \n  <style>\n\t\n\n\t/* The fixed chart */\n  \n\t.flourish-embed {\n\t\twidth: 100vw;\n\t  height: 100vh;\n\t  position: sticky;\n\t  top: 0;\n\t  margin: auto;\n\t  margin-top: 70px;\n\t}\n\t\n\t.picture {\n\t\twidth:100vw;\nheight: auto;\n\t  position: sticky;\n\t  top: 0;\n\t  margin: auto;\n\t  position: absolute;\n\t\tleft: 0;\n\t}\n\n\t.flourish-embed, .picture {\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n\twill-change: transform;\n}\n\n\t/* Scrollytelling CSS */\n\t.step {\n\t  height: 80vh;\n\t  display: flex;\n\t  place-items: center;\n\t  justify-content: center;\n\t  z-index: 100;\n\t}\n\n    .sticky {\n    position: sticky;\n    top: 0;\n\tflex: 1 1 100%;\n    width: 100%;\n\tz-index: 9;\n\theight: 100vh;\n  }\n\n  .spacer {\n    height: 20vh;\n  }\n\n  .section-container {\n    margin-top: 1em;\n    text-align: center;\n    transition: background 100ms;\n    display: flex;\n\tflex-direction: column-reverse;\n\n  }\n\n  .step-content {\n\tbackground-color: rgba(245, 245, 245, 0.8);\n\t\t\tcolor: black;\n\t\t\tborder-radius: 10px;\n\t\t\tpadding: 0.5rem 1rem;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tjustify-content: center;\n\t\t\ttransition: background 500ms ease;\n\t\t\tbox-shadow: 1px 1px 10px rgba(0, 0, 0, 0.2);\n\t\t\tz-index: 10;\n\t\t\tfont-size: 1rem;\n\t\t  text-align: left;\n\t\t\t  width: 75%;\n\t\t\t  margin: auto;\n\t\t\t  max-width: 500px;\n  }\n\n\t\n\t\n  .steps-container,\n  .sticky {\n    height: 100%;\n  }\n\n  .steps-container {\n    flex: 1 1 40%;\n    z-index: 10;\n  }\n\t\n  @media screen and (max-width: 768px) {\n    .section-container {\n      flex-direction: column-reverse;\n    }\n    .sticky {\n      width: 100%;\n\t\t\tmargin: auto;\n    }\n\n\t.picture {\n\t  margin-top: 50%;\n\t}\n  }\n\n\n\n  </style>\n","<script>\n\n</script>\n\n<div class=\"article\">\n\n  <p style=\"text-align: center\">🚗 🚕 🚗 🚕 🚗 🚕 🚗</p>\n  <br>\n\n  <p>Première question&nbsp;: notre parc automobile est-il vraiment devenu plus sombre au fil des années&nbsp;? Renseignement pris, la Direction pour l'Immatriculation des Véhicules ne peut pas nous éclairer faute de statistiques fiables sur le sujet. Explication&nbsp;: «&nbsp;<i>Il existe effectivement un code pour la couleur lors de l'immatriculation, mais ce code n'est pas obligatoire. Aussi, certaines personnes n'inscrivent rien, ou de manière erronée : une voiture noire peut avoir des reflets bleus ou verts par exemple, ce sont donc des intitulés spécifiques mais les gens indiquent seulement 'noir'&nbsp;</i>».</p>\n    \n  <p>Pour avoir une idée du marché il faudra donc se retrousser les manches. Nous avons mené une petite expérience qui n’a pas valeur de sondage mais qui permet d'éclairer le sujet...</p> \n</div>\n\n<style>\n\n\n\n\n</style>\n","const get_intersecting = (entries) => {\n    let count = 0;\n    for (const entry of entries) {\n        if (entry.isIntersecting) {\n            count++;\n            break;\n        }\n    }\n    return count > 0;\n};\nexport const create_pointer = (entries) => {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    const entry = entries[0];\n    const intersecting = get_intersecting(entries);\n    let pointerEl = document.querySelector('[data-use-io-dev]');\n    if (!pointerEl) {\n        pointerEl = document.createElement('div');\n        pointerEl.dataset.useIoDev = 'true';\n        pointerEl.style.setProperty('font-size', '0.8rem');\n        pointerEl.style.setProperty('mix-bl\tend-mode', 'var(--io-pointer-blend-mode, multiply)');\n        pointerEl.style.setProperty('text-indent', '10px');\n        pointerEl.style.setProperty('position', 'fixed');\n        pointerEl.style.setProperty('z-index', '99999');\n        pointerEl.style.setProperty('opacity', 'var(--io-pointer-opacity, 1)');\n        document.body.appendChild(pointerEl);\n    }\n    const { rootBounds } = entry;\n    const { top, left, width, height } = rootBounds;\n    pointerEl.style.setProperty('top', `${top}px`);\n    pointerEl.style.setProperty('left', `${left}px`);\n    pointerEl.style.setProperty('width', `${width}px`);\n    pointerEl.style.setProperty('height', `${height}px`);\n    if (intersecting) {\n        pointerEl.style.setProperty('color', 'var(--io-pointer-color-text-intersecting, #14532d)');\n        pointerEl.style.setProperty('background-color', 'var(--io-pointer-color-intersecting, rgba(0 250 154 / 0.3))');\n        pointerEl.textContent = 'intersecting';\n    }\n    else {\n        pointerEl.style.setProperty('color', 'var(--io-pointer-color-text, deeppink)');\n        pointerEl.style.setProperty('background-color', 'var(--io-pointer-color, rgba(255 20 147 / 0.3 ))');\n        pointerEl.textContent = 'rootBound';\n    }\n};\n","import { create_pointer } from './create_pointer.js';\nexport const default_callback = ({ entry, observer }) => {\n    const el = entry.target;\n    if (entry.isIntersecting) {\n        el.dispatchEvent(new CustomEvent('intersecting', {\n            detail: entry\n        }));\n        if (el.dataset.ioOnce === 'true') {\n            observer.unobserve(el);\n        }\n    }\n    else {\n        el.dispatchEvent(new CustomEvent('unintersecting', {\n            detail: entry\n        }));\n    }\n};\nconst default_options = {\n    root: null,\n    rootMargin: '0px',\n    callback: default_callback\n};\nexport function create_observer(options = {}) {\n    let io = {\n        disconnect: () => null\n    };\n    let observer;\n    const { callback, showRootBound, ...io_options } = {\n        ...default_options,\n        ...options\n    };\n    const cb = (entries, observer) => {\n        if (showRootBound) {\n            create_pointer(entries);\n        }\n        entries.forEach((entry) => {\n            callback({ entry, observer });\n        });\n    };\n    if (typeof window !== 'undefined') {\n        io = new IntersectionObserver(cb, io_options);\n        observer = (node, { once = false } = {}) => {\n            node.dataset.ioOnce = once.toString();\n            io.observe(node);\n            return {\n                update(nextOption) {\n                    const current_once = node.dataset.ioOnce;\n                    const next_once = nextOption.once.toString();\n                    // re-observe this node if 'once' is disabled\n                    if (current_once === 'true' && next_once === 'false') {\n                        io.observe(node);\n                    }\n                    node.dataset.ioOnce = next_once;\n                },\n                destroy() {\n                    io.unobserve(node);\n                }\n            };\n        };\n    }\n    return { observer, io };\n}\n","<script>\r\n    import { createObserver } from \"svelte-use-io\";\r\n  \r\n    const { observer } = createObserver({\r\n        rootMargin: \"-50%\",\r\n    });\r\n    let video;\r\n    const play = () => {\r\n        video.play();\r\n    };\r\n    const pause = () => {\r\n        video.pause();\r\n    };\r\n  </script>\r\n  \r\n  <div class=\"report\">\r\n    <video\r\n    playsinline\r\npreload=“metadata”\r\n    src=\"./vids/all_kia.mp4\"\r\n    muted\r\n    loop\r\n    bind:this={video}\r\n    use:observer\r\n    on:intersecting={play}\r\n    on:unintersecting={pause}\r\n    />\r\n    \r\n  </div>\r\n  <p style=\"text-align:right; font-size: 0.8em;line-height:1.2em\">Les 9 couleurs disponibles pour la Kia Stonic (l'animation tourne en boucle, vous pouvez passer à la suite).</p>\r\n  <style>\r\n    .report {\r\n        margin: 0 auto;\r\n        justify-content: center;\r\n        width: 100%;\r\n        display: flex;\r\n    }\r\n    video {\r\n        width: 100%;\r\n        outline: 4px solid white;\r\noutline-offset: -4px;\r\n    }\r\n\r\n    @media screen and (max-width: 550px) {\r\n        video {\r\n            width: 100vw;\r\n            height: auto;\r\n\t}\r\n}\r\n  </style>\r\n  ","<div class=\"image-grid\">\n    <div class=\"image-row\">\n        <div class=\"image image-01\" />\n        <div class=\"image image-02\" />\n    </div>\n    <div class=\"caption\">\n\n        Une BMW 2002 Tii de 1973 et une Volkswagen Golf Gti de 1983, avec sa célèbre calandre rouge. - Crédit Dean Mouhtaropoulos/Getty Images & National Motor Museum/Heritage Images/Getty Images\n    </div>\n</div>\n\n<style>\n    * {\n        border-width: 0;\n    }\n\n    .image-grid {\n        padding: 5px;\n    }\n\n    .image-row {\n        display: flex;\n    }\n\n    .image-row .image {\n        margin: 15px 5px 15px 5px;\n        height: 50vh;\n    }\n\n    .caption {\n        text-align: right;\n        font-size: 0.7em;\n        margin-top: -10px;\n        width: 100%;\n        margin: 0 auto;\n    }\n    .image {\n        background-repeat: no-repeat;\n        background-size: cover;\n        background-position: center center;\n    }\n\n    .image-01 {\n        background-image: url(\"../pics/BMW_orange.webp\");\n        flex: 1;\n    }\n\n    .image-02 {\n        background-image: url(\"../pics/Golf_gti_black.webp\");\n        flex: 1;\n    }\n\n    @media screen and (max-width: 800px) {\n        .image-row {\n            flex-direction: column;\n        }\n\n        .image-row .image {\n            flex-basis: auto;\n        }\n    }\n</style>\n","<script>\n\nimport Video from \"./Video.svelte\";\n\nimport Grid_1 from \"./Grid_1.svelte\";\n\n\n\n</script>\n\n<div class=\"article\">\n\n  <p>Qu’en est-il sur le marché belge en particulier&nbsp;? Le site Gocar nous a transmis une analyse pour le moins parlante&nbsp;: le graphique ci-dessous reprend un échantillon de 180.000 véhicules actuellement en vente sur différentes plateformes de petites annonces, ainsi que sur les sites de gros importateurs ou de constructeurs. Leur point commun&nbsp;: ils ont été immatriculés pour la première fois après 1970. «&nbsp;<i>C'est comme si j'avais devant moi tout le marché et que je prenais un polaroïd de tous les véhicules en vente vendus, reclassés par leur année de première immatriculation</i>&nbsp;», résume Marc Gros, product manager pour Gocar Data.</p> \n\n  <p>Et que voit-on sur ce graphique&nbsp;? Les années 70 ont fait la part belle aux carrosseries orange, jaunes, vertes, rouges ou bleues (en tout cas ce sont celles-là que les amateurs de voitures anciennes ont choisir de garder). Ensuite, «&nbsp;<i>il y a vraiment un appauvrissement de la palette au fur et à mesure du temps qui passe</i>&nbsp;», observe ce fin connaisseur du secteur. Et d’évoquer avec nostalgie la «&nbsp;<i>Renault douze orange fluo de [son] père quand [il] avai[t] quatre ou cinq ans</i>&nbsp;». Marc Gros sourit&nbsp;: «&nbsp;<i>Je pense qu'on lui jetterait des cailloux s'il se promenait avec ça en rue maintenant... mais il en parle encore 40 ans plus tard.</i>&nbsp;»</p> \n\n  </div>\n\n  <div class=\"flourish-embed flourish-chart\" data-src=\"visualisation/15249118\"><script src=\"https://public.flourish.studio/resources/embed.js\"></script></div>\n\n  <div class=\"article\">\n  \n  <h1>Il y a encore de la couleur, mais...</h1>\n  \n  <p>Pas une seule pointe d’orange et encore moins de jaune dans cette concession KIA en bord de Nationale 4 à l’entrée de Wavre. Par contre il y a bien du vert qualifié de «&nbsp;<i>militaire</i>&nbsp;» par les vendeurs. Et aussi du bleu «&nbsp;<i>pétant</i>&nbsp;» comme sur cette Kia Stonic dont le pare-brise est barré d’un écriteau «&nbsp;<i>Trop tard</i>&nbsp;» pour indiquer qu’elle est vendue. Pour Anthony, l’un des vendeurs, c’est «&nbsp;<i>l’effet showroom</i>&nbsp;». «&nbsp;<i>Si vous voulez vendre cette couleur-là, il faut l’exposer. Sur échantillon, ça ne parle pas au client. Un rouge bordeaux c’est la même chose. Il y a tellement de nuances que le client doit voir cette couleur-là pour dire&nbsp;: «&nbsp;<i>ça me plaît, je vais l’acheter</i>&nbsp;»</i>&nbsp;», analyse-t-il.</p>\n\n  <blockquote>«&nbsp;<i>Les gens pensent à la revente</i>&nbsp;»</blockquote> \n\n  \n  <p>Il y a les clients qu’on séduit d'un coup d'œil et puis il y a les pragmatiques, tempère son collègue Christophe. D’un ton expert, il l’affirme&nbsp;: «&nbsp;<i>Les gros véhicules de couleur, ça ne se vend pas. Les gens veulent des couleurs faciles, passe-partout, ils pensent à la revente. Il faut aussi des couleurs similaires sur les chaines de production. Si on a cinquante possibilités, ça ne va pas.</i>&nbsp;»</p>\n  \n  <p>Et puis «&nbsp;<i>une jaune... va t'en après trouver l’amateur qui va la reprendre... D’accord pour les voitures sportives il faut être vu. Mais la voiture courante du peuple doit être classique</i>&nbsp;». Les deux vendeurs balayent le showroom des yeux&nbsp;: «&nbsp;<i>Et ici, on est comme tout le monde, on est couleur classique.</i>&nbsp;»</p>\n  \n  <p>Pourtant, on voit encore des véhicules avec des teintes vives. Celles-ci sont en fait des choix calculés des constructeurs. «&nbsp;<i>Vous avez souvent ce qu'on appelle des couleurs de lancement. Ce sont des couleurs qui sont uniques à un certain modèle qui va mettre plus la carrosserie de la voiture en évidence</i>&nbsp;», explique Bastien Van Den Moortel, porte-parole de Mercedes-Benz. Ces teintes sortent du lot et sont parfois proposées sans supplément. Anthony de chez Kia évoque le cas d'une Opel Moka verte il y a quelques années. «&nbsp;<i>C’était la couleur de lancement. Le client ne payait pas de supplément pour cette couleur-là.</i>&nbsp;»</p>\n\n\n  \n  <Video/>\n  \n  \n  <p>Même mécanique chez Peugeot. «&nbsp;<i>Pour les derniers lancements, la teinte de série gratuite est généralement une couleur</i>&nbsp;», confirme Caroline Struys, product manager chez Peugeot. Elle ajoute malgré tout que «&nbsp;<i>ces dix dernières années, les teintes les plus populaires sont&nbsp;: gris clair, gris foncé, noir et blanc malgré le fait que des teintes plus ‘flashy’ soient disponibles sur nos modèles.</i>&nbsp;»</p>\n  \n  <p>Chez Peugeot, «&nbsp;<i>les couleurs représentent moins de 20% (cela dépend des modèles&nbsp;: 308 et 408 par exemple sont plus «&nbsp;<i>colorées</i>&nbsp;»). Et ça malgré le fait que les teintes de lancement sont depuis quelques années très colorées, jaune Agueda, vert Olivine, bleu Obsession, metallic Copper...</i>&nbsp;» Comme on dit, le client est roi. Et de ce domaine, le roi est «&nbsp;<i>plutôt classique</i>&nbsp;», conclut Caroline Struys.</p>\n  \n  <p>Autre facteur à prendre en compte, mis en avant par Philippe Casse, ancien porte-parole de D’Ieteren&nbsp;: «&nbsp;<i>Le client qui achète une voiture neuve va la garder longtemps, en moyenne 7 à 8 ans. Donc il sera longtemps le jouisseur ou la victime des conséquences de son choix de couleurs.</i>&nbsp;» De quoi réfléchir à deux fois avant d’acheter... et de revendre.</p>\n  \n  <p>Au passage gardez ces quelques éléments à l’esprit au moment de choisir la couleur de votre nouvelle voiture. Il y a d’abord le fait que les carrosseries avec des couleurs largement répandues coûtent moins cher à réparer. Et ensuite cet argument concernant les voitures noires&nbsp;: «&nbsp;<i>Les voitures foncées développent une plus grande température à l'intérieur que les couleurs claires sous l’effet des rayons du soleil. Et ce phénomène augmente encore quand la voiture est sale</i>&nbsp;», soutient Philippe Casse.</p>\n  \n  <figure>\n    <img src=\"./pics/yoda.webp\" alt=\"\" />\n    <figcaption class=\"caption\">Quand la couleur inspire le propriétaire de la voiture pour le choix d'une plaque personnalisée... - Crédit&nbsp;: Am.C.</figcaption>\n  </figure>\n  \n  <p>Il suffit de faire un tour sur les sites de revente de voitures pour s’en rendre compte&nbsp;: les voitures de couleurs n’y sont pas très nombreuses. «&nbsp;<i>À l'heure actuelle, les voitures noires, grises et blanches représentent 68,32 % des mises en vente sur la plateforme. Et si on ajoute le bleu, on est à 78,9 %</i>&nbsp;», confirme Fabio Gheyesens, marketing coordinator chez AutoScout24, l’un des leaders du secteur.</p>\n  \n  <p>Fabio Gheyesens poursuit&nbsp;: «&nbsp;<i>Les couleurs exclusives sur des voitures de tourismes exercent une influence plus négative sur le prix de revente car on trouve beaucoup moins d'acheteurs potentiels. Cela cause un délai plus long à la revente et par conséquent une dévaluation du véhicule.</i>&nbsp;»</p> \n  \n  <p>Mauvais plan donc de miser sur une voiture jaune moutarde dans un pays où le marché de l’occasion récente est inondé par les véhicules de leasing et les voitures de société aux teintes souvent passe-partout. «&nbsp;<i>En Belgique, on offre facilement une voiture de société [<a href='  https://mobilit.belgium.be/fr/file/4136/download?token=ioNYO32c' target='_blank' rel=noreferrer>selon Statbel</a>, on comptait 560.941 «&nbsp;<i>voitures-salaires</i>&nbsp;» en Belgique en 2022, NDLR]. Donc c'est pour ça qu'on retrouve ces véhicules en si grand nombre sur des plateformes comme Autoscout24</i>&nbsp;», détaille le marketing coordinator.</p> \n\n  <div class=\"flourish-embed flourish-chart\" data-src=\"visualisation/15249462\"><script src=\"https://public.flourish.studio/resources/embed.js\"></script></div>\n\n  \n  <h1>Qui se ressemble, rassemble</h1>\n  \n  <p>«&nbsp;<i>Certaines entreprises offrent aux nouveaux employés la même voiture de série, et celle-ci est presque toujours de la même couleur</i>&nbsp;», observe-t-on chez ALD Automotive | LeasePlan. On pense aussitôt aux Mini noires avec rétroviseurs verts de chez Deloitte. Ou aux voitures blanches avec rétroviseurs mauves typiques de chez Odoo en Brabant wallon. Deux exemples qui contribuent à rendre le nom d’une entreprise bien visible, même inconsciemment.</p>\n  \n  <p>Chez ALD, le gris, le blanc et le noir constituent le trio de tête. Les autres couleurs sont minoritaires selon des chiffres transmis par ce spécialiste du leasing qui s’est basé sur un échantillon de 8000 de ses véhicules.</p>\n  \n  <div class=\"flourish-embed flourish-chart\" data-src=\"visualisation/15249572\"><script src=\"https://public.flourish.studio/resources/embed.js\"></script></div>\n  \n  <h1>De «&nbsp;m’as-tu-vu&nbsp;» à «&nbsp;vivons cachés&nbsp;»</h1>\n  \n  <p>Marché de la seconde main, influence du leasing sont-ils les seuls facteurs qui poussent le marché vers moins de couleur&nbsp;? Pas vraiment. Patrice Vergès, journaliste et historien de l’automobile, a parcouru la palette de long en large au fil des décennies. Pour lui, la question est loin d’être anodine.</p>\n  \n  <p>Car l’histoire de l’automobile a commencé dans la pénombre. «&nbsp;<i>Au début du XXᵉ siècle, les voitures étaient souvent en noir, pour la simple raison que l'immense majorité d'entre elles étaient carrossées par des carrossiers hippomobiles dont la couleur quasi uniforme était le noir</i>&nbsp;», complète Philippe Casse.</p>\n  \n  <p>«&nbsp;<i>Les gens peuvent choisir n'importe quelle couleur pour la Ford T, du moment que c'est noir</i>», aurait dit Henry Ford à propos de sa Ford T dans les années 1900. La légende veut que c’était la couleur qui séchait le plus vite.</p>\n  \n  <figure>\n    <img src=\"./pics/fleche_argent.jpg\" alt=\"\" />\n    <figcaption class=\"caption\">La Mercedes-Benz W25B Silberpfeil (Flèche d'Argent en français), qui remportera plusieurs courses dans les années Trente. Son secret&nbsp;: la peinture blanche du véhicule avait été poncée pour alléger la carrosserie. Cette nouvelle «&nbsp;couleur&nbsp;» est depuis devenue mythique. - Crédit&nbsp;: Argusphot/ullstein bild via Getty Images</figcaption>\n  </figure>\n  \n  <p>L’explosion de la palette se produit au tournant des années 60-70. «&nbsp;<i>À la fin des années 60, on était dans les Trente Glorieuses, des années optimistes. On n’avait pas peur de l’avenir ni du réchauffement de la planète</i>, rejoue Patrice Vergès. <i>Porsche et BMW ont été les premiers constructeurs à sortir des voitures de couleur orange. Les Porsche orange c'était le top du top. Une BMW 2002 orange, il n’y avait pas mieux et tous les constructeurs se sont mis à faire des couleurs vives. On a vu des R5 vert clôture, des 2CV orange...</i>&nbsp;», énumère celui qui a signé une trentaine d’ouvrages sur l‘histoire de l’automobile.</p>\n  \n  <figure>\n    <img src=\"./pics/2CV.webp\" alt=\"\" />\n    <figcaption class=\"caption\">Des voitures anciennes lors d'un rallye au château du Lac, à Genval, le 30 septembre 2023 - Crédit&nbsp;: Am.C.</figcaption>\n  </figure>\n  \n  <p>C’est aussi à cette époque-là qu’un autre élément - plutôt inattendu – entre en ligne de compte. «&nbsp;<i>Dans les années 70-80, en Allemagne, les compagnies d'assurance offraient des rabais sur la prime aux gens qui achetaient des voitures ou qui utilisaient des voitures de couleurs très vives&nbsp;: jaune pétant, orange vif, vert pomme. Ils avaient un intérêt financier à acheter des voitures de couleurs très vives. Le raisonnement étant que ces voitures vives étant plus visibles, attirent plus l’attention et donc les autres conducteurs ont une probabilité plus grande de les éviter</i>&nbsp;», s’amuse Philippe Casse.</p>\n  \n  <blockquote>«&nbsp;<i>N'importe qui ne peut pas lancer une couleur à la mode.</i>&nbsp;»</blockquote> \n  \n  <p>Un premier coup d’arrêt intervient avec le choc pétrolier de 1973 qui, selon les mots de Patrice Vergès, «&nbsp;<i>a un peu tempéré l’optimisme</i>&nbsp;». L’historien raconte&nbsp;: «&nbsp;<i>Après avoir encore osé la couleur avec la première Golf en 1974, Volkswagen lance la Golf GTI noire.  C'était une couleur complètement démodée. Mais avoir une Golf noire ou une GTI noire avec la petite calandre rouge, c'était le top du top du snobisme, de l'élégance et de la classe. Donc tous les constructeurs se sont mis à faire des voitures noires.</i>&nbsp;»</p>\n\n  </div>\n  \n<Grid_1/>\n\n  <div class=\"article\">\n  \n  <p>C’est d’ailleurs un facteur essentiel. «&nbsp;<i>Pour qu'une mode soit lancée, il faut que le constructeur soit prescripteur. Si c'est Skoda lance une voiture orange, ça ne marche pas. Si c'est Porsche ou BMW, ça marche. N'importe qui ne peut pas lancer une couleur à la mode.</i>&nbsp;»</p>\n  \n  <p>Viennent les années 90 et ses «&nbsp;<i>couleurs -beaucoup plus sobres</i>&nbsp;» repérées par Patrice Vergès. «&nbsp;<i>La société a changé. La voiture n'est plus un signe extérieur de réussite. Donc on cache. On désigle les voitures pour pas dire aux voisins qu'on a une BMW 6 35</i>&nbsp;». À en croire le journaliste automobile, un conducteur heureux est un conducteur qui roule caché. «&nbsp;<i>Quand on vieillit, on veut des couleurs plus neutres et plus discrètes. Quand on a réussi, on cherche la sobriété</i>&nbsp;».</p>\n  \n  <h1>La couleur, atout marketing</h1>\n  \n  <p>Les constructeurs, avec leurs airs de ne pas trop y toucher et leur volonté affichée d’aller dans le sens du client tentent parfois des coups publicitaires. En juin 2023, Fiat voit grand et plonge une de ses voitures dans un énorme pot de peinture orange sur la place d’un petit village italien aux façades colorées. «&nbsp;<i>À partir d'aujourd'hui, Fiat cesse de produire des voitures grises. Cette décision a été prise afin de souligner l'importance des couleurs dans la vie, d'incarner le mode de vie italien et de réaffirmer la Dolce Vita comme nouvelle valeur de la marque</i>&nbsp;», explique la marque propriété du groupe Stellantis dans un communiqué.</p>\n  \n  <p>Et d’énumérer toute une palette de couleur à faire rosir de plaisir un chanteur de charme milanais. Le tout dans un mélange d’italien et d’anglais&nbsp;: Gelato white, Sicilia orange, Paprika orange, Passione red, Blu Dipinto di Blu (subtile allusion à un tube de Domenico Modugno à la fin des années 50), Italia blue, Venezia blue, Rugiada green, Foresta green, Rose gold ou encore Cinema black. Bref, tout est là.</p>\n\n  <figure>\n    <img src=\"./pics/Twingo.webp\" alt=\"\" />\n    <figcaption class=\"caption\">Une publicité par la Renault Twingo en 1993 - Crédit : Renault/Agence Publicis Conseil</figcaption>\n  </figure>\n  \n  <p>Bien avant Fiat, Volkswagen avait aussi sorti ses pinceaux. Le résultat de ce remue-méninge de publicitaires inspiré d’une publicité pour la coccinelle dans les années 60 s’appellera la Polo Harlequin. Imaginez&nbsp;: un capot jaune, des ailes vertes, une portière rouge, l’autre jaune... Des agencements modulables selon les désirs du client. «&nbsp;<i>Cette série limitée est composée de quatre couleurs différentes (rouge, jaune, vert et bleu). Le client peut choisir entre quatre répartitions différentes des couleurs en question, l'affaire vire au casse-tête [pour les chaînes de production]</i>&nbsp;», <a href='https://www.caradisiac.com/la-beaute-des-laides-volkswagen-polo-arlequin-une-profusion-de-couleurs-appreciee-des-allemands-mais-pas-des-francais-190477.htm' target='_blank' rel=noreferrer>rapporte le site caradisiac.com</a>.</p>\n  \n\n\n  <p>La Polo Harlequin connaîtra un succès phénoménal en Allemagne où, selon caradisiac, «&nbsp;<i>les 1000 exemplaires initialement prévus seront bientôt 3800</i>&nbsp;». Et chez nous&nbsp;? Interrogé à ce sujet, Philippe Casse, qui a pourtant été porte-parole du groupe D’Ieteren pendant plusieurs décennies, n’en garde qu’un vague souvenir.</p>\n  \n  <p>Enfin, dans une industrie régulée au millimètre, où chaque choix est le fruit d’une longue réflexion pour séduire le client, certains épisodes viennent nous rappeler qu’il y a aussi de la place pour le hasard. En 2016, un Américain est l’heureux propriétaire d’une Volkswagen Golf R. La robe du véhicule suscite l’admiration et l’étonnement chez les spécialistes. Et pour cause&nbsp;: la couleur n’est tout simplement pas disponible au catalogue pour ce modèle précis.</p>\n  \n  <p>«&nbsp;<i>Selon l’entreprise, la raison la plus probable est que le code à quatre chiffres pour la peinture a été encodé de manière incorrecte ou que la mauvaise couleur a été sélectionnée à cause d’une erreur du système</i>&nbsp;», <a href='https://www.thedrive.com/news/vw-golf-r-painted-the-wrong-color-by-the-factory-is-a-one-of-a-kind-mystery' target='_blank' rel=noreferrer>peut-on lire sur le site thedrive.com</a>. Mis à prix pour 15.000 dollars (environ 14.000 euros), ce modèle unique a trouvé preneur pour 39.888 (38.000 euros) <a href='https://bringatrailer.com/listing/2017-volkswagen-golf-r-12/' target='_blank' rel=noreferrer>en février 2023</a>. La couleur en question&nbsp;? «&nbsp;<i>Carbon Steel Gray Metallic</i>&nbsp;». Du gris, donc. Mais qui vaut de l’or.</p>\n\n  <p style=\"text-align: center\">🚗 🚕 🚗 🚕 🚗 🚕 🚗</p>\n\n\n  <h3 style=\"text-align: right;\">Ambroise Carton</h3>\n   \n</div>\n\n<style>\n\n.flourish-embed{\n\tmax-width: 70vw;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin: 0 auto;\n  }\n\n  @media screen and (max-width: 550px) {\n\n\t\t.flourish-embed{\n\t\t\tmax-width: 100vw;\n\t\t  }\n  }\n\n\n</style>\n","import App from './App.svelte';\r\nvar app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","removeProperty","setProperty","toggle_class","toggle","classList","HtmlTag","constructor","is_svg","this","e","n","html","h","m","nodeName","createElementNS","t","i","innerHTML","Array","from","childNodes","length","p","d","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","promise","flushidx","flush","saved_component","update","pop","callback","has","add","fragment","before_update","dirty","after_update","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","cancelable","createEvent","initCustomEvent","custom_event","outroing","transition_in","block","local","transition_out","o","outros","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","fulfill","loop","started","start","then","invalidate","end","create_component","mount_component","customElement","new_on_destroy","map","on_destroy","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","keys","Types","MQLEventMethods","fade","linear","getComputedStyle","opacity","div0","nav","if_block","create_if_block","y","div4","div","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","undefined","merged","len","Math","max","top","bottom","increments","steps","threshold","container","intersectionObservers","createObserver","rootMargin","disconnect","io","IntersectionObserver","isIntersecting","ratio","intersectionRatio","maxRatio","maxIndex","$$invalidate","mostInView","observe","querySelectorAll","$$value","raw_value","t1_value","stepNumber","div1","span","iterations","iframe","iframe_src_value","img","img_src_value","source","source_src_value","video","create_if_block_1","create_if_block_2","div2","currentStep","contentLink","slide","iframeHeight","default_options","entry","observer","el","CustomEvent","dataset","ioOnce","unobserve","create_observer","showRootBound","io_options","entries","intersecting","count","get_intersecting","pointerEl","querySelector","useIoDev","body","rootBounds","left","width","height","textContent","create_pointer","once","toString","nextOption","current_once","next_once","destroy","action_result","video_1","play","pause","h10","p2","blockquote0","p3","p4","p5","p6","p7","p8","p9","figure0","p10","p11","p12","h11","p13","p14","div3","h12","p15","p16","p17","figure1","p18","figure2","p19","blockquote1","p20","div5"],"mappings":"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"}